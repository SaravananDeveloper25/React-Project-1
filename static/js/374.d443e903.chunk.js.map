{"version":3,"file":"static/js/374.d443e903.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/LocalPhone.js","../node_modules/@mui/icons-material/WhatsApp.js","../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/init/init.js","../node_modules/emailjs-com/es/methods/send/send.js","../node_modules/emailjs-com/es/methods/sendForm/sendForm.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02z\"\n}), 'LocalPhone');","\"use strict\";\n'use client';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.75 13.96c.25.13.41.2.46.3.06.11.04.61-.21 1.18-.2.56-1.24 1.1-1.7 1.12-.46.02-.47.36-2.96-.73-2.49-1.09-3.99-3.75-4.11-3.92-.12-.17-.96-1.38-.92-2.61.05-1.22.69-1.8.95-2.04.24-.26.51-.29.68-.26h.47c.15 0 .36-.06.55.45l.69 1.87c.06.13.1.28.01.44l-.27.41-.39.42c-.12.12-.26.25-.12.5.12.26.62 1.09 1.32 1.78.91.88 1.71 1.17 1.95 1.3.24.14.39.12.54-.04l.81-.94c.19-.25.35-.19.58-.11l1.67.88M12 2a10 10 0 0 1 10 10 10 10 0 0 1-10 10c-1.97 0-3.8-.57-5.35-1.55L2 22l1.55-4.65A9.969 9.969 0 0 1 2 12 10 10 0 0 1 12 2m0 2a8 8 0 0 0-8 8c0 1.72.54 3.31 1.46 4.61L4.5 19.5l2.89-.96A7.95 7.95 0 0 0 12 20a8 8 0 0 0 8-8 8 8 0 0 0-8-8z\"\n}), 'WhatsApp');","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.2.10\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection = new ProjectionNodeConstructor(this.latestValues, renderedProps[\"data-framer-portal-id\"]\n                ? undefined\n                : getClosestProjectingNode(this.parent));\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.2.10\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.2.10 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","e","r","__esModule","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","WeakMap","store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","keys","forEach","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","Queue","order","scheduled","Set","add","process","push","remove","index","indexOf","splice","delete","clear","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","queue","cancel","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","keepAlive","immediate","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","useMotionRef","visualState","visualElement","externalRef","useCallback","instance","mount","unmount","current","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","layoutId","useLayoutId","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","jsxs","Provider","value","children","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","_a","calcOrigin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","getValueState","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","frame","cancelFrame","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","postRender","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","currentFinishedPromise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","acceleratedValues","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","willChange","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","getClosestProjectingNode","allowProjection","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig"],"sourceRoot":""}